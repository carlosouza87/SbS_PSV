%% Constant parameters and unity conversion factors
% In principle, there is no need for changing any of these parameters.

rho_water = 1025;   % Water density [kg/m^3]
g = 9.8;            % Acceleration of gravity [m/s^2]
d2r = pi/180;       % Conversion factor, degrees to radians [rad/deg]
r2d = 180/pi;       % Conversion factor, radians to degrees [deg/rad]
knt2ms = 0.5144;    % Conversion factor, knots to meters per second [m/knt.s]
ms2knt = 1/knt2ms;  % Conversion factor, meters per second to knots [knt.s/m]

%% Ships dimensions, properties and hydrodynamic data
% The user must specify the name of the ".mat" file with data to be read, 
% which was generated by the "Input generator"

load(['simdata_' caseid])

%% Environment data
betaw = 195;    % Wave incidence direction [deg]
Hs = 2.5;       % Significant wave height [m]
Tp = 9.0;       % Wave peak period [s]
gammaw = betaw; % Wind incidence direction [deg]
Uw = 10.0;      % Wind velocity [m/s]
alphac = 180;   % Current incidence direction [deg]
Uc = 1.0;       % Current velocity [m/s]

% wave - 1st order
load randu1.txt -ascii % list with uniformly distributed values
data.environment.betaw = betaw; % waves mean direction [deg]
data.environment.Hs = Hs;   % significant wave height [m]
data.environment.Tp = Tp; % wave modal period [s]
data.environment.w_s = 0:0.05:4;   % frequencies for spectrum calculation

% wind
load dados_OCIMF77.txt -ascii
data.environment.coefwind = dados_OCIMF77; % OCIMF'77 coefficients
data.environment.gammaw = gammaw;    % wind incidence direction [deg]
data.environment.Uw = Uw;    % wind velocity [m/s]
gammaw;
% current
data.environment.alphac = alphac;    % current incidence direction [deg]
data.environment.Uc= Uc;    % current velocity [m/s]


%% Parameters for scheduling of wind and mean drift loads calculation
% Mean drift loads
variable.ship(1).calc_mdrift = 1;
variable.ship(1).u_md = data.ship(1).nu0(1) + 1;
variable.ship(1).v_md = data.ship(1).nu0(2) + 1;
variable.ship(1).psi_md = data.ship(1).eta0(6) + 10*pi/180;

variable.ship(2).calc_mdrift = 1;
variable.ship(2).u_md = data.ship(2).nu0(1) + 1;
variable.ship(2).v_md = data.ship(2).nu0(2) + 1;
variable.ship(2).psi_md = data.ship(2).eta0(6) + 10*pi/180;

% Wind loads
variable.ship(1).calc_wind = 1;
variable.ship(1).u_wn = data.ship(1).nu0(1) + 1;
variable.ship(1).v_wn = data.ship(1).nu0(2) + 1;
variable.ship(1).psi_wn = data.ship(1).eta0(6) + 10*pi/180;

variable.ship(2).calc_wind = 1;
variable.ship(2).u_wn = data.ship(2).nu0(1) + 1;
variable.ship(2).v_wn = data.ship(2).nu0(2) + 1;
variable.ship(2).psi_wn = data.ship(2).eta0(6) + 10*pi/180;

%% Initial state vectors
data.ship(1).eta0 = [0;0;0;0*pi/180;0;0];
data.ship(1).nu0 = [0;0;0;0;0;0];

data.ship(2).eta0 = [0;0;0;0*pi/180;0;0];
data.ship(2).nu0 = [0;0;0;0;0;0];
